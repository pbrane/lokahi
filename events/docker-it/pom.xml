<?xml version="1.0" encoding="utf-8" ?>
<!--
 - Licensed to The OpenNMS Group, Inc (TOG) under one or more
 - contributor license agreements.  See the LICENSE.md file
 - distributed with this work for additional information
 - regarding copyright ownership.
 -
 - TOG licenses this file to You under the GNU Affero General
 - Public License Version 3 (the "License") or (at your option)
 - any later version.  You may not use this file except in
 - compliance with the License.  You may obtain a copy of the
 - License at:
 -
 -      https://www.gnu.org/licenses/agpl-3.0.txt
 -
 - Unless required by applicable law or agreed to in writing,
 - software distributed under the License is distributed on an
 - "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 - either express or implied.  See the License for the specific
 - language governing permissions and limitations under the
 - License.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.opennms.lokahi</groupId>
    <artifactId>events</artifactId>
    <version>0.1.0-SNAPSHOT</version>
  </parent>

  <artifactId>events-docker-it</artifactId>

  <name>OpenNMS Lokahi :: Events :: Docker IT</name>
  <description>Docker build-time Integration Tests for the OpenNMS Events.

        Test Containers are used to spin up containers and exercise the public endpoints.</description>
  <properties>
    <application.docker.image.name>opennms/lokahi-events</application.docker.image.name>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.opennms.lokahi.events</groupId>
      <artifactId>persistence</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.lokahi.events</groupId>
      <artifactId>traps</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.lokahi.events</groupId>
      <artifactId>consumer</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.lokahi.events</groupId>
      <artifactId>grpc</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.lokahi.shared</groupId>
      <artifactId>grpc-common-constants</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>4.2.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.jayway.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit-platform-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-picocontainer</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite</artifactId>
      <version>1.9.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!--
                      temporarily required for test-containers on m1 mac
                      https://github.com/testcontainers/testcontainers-java/issues/3610
                  -->
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
      <version>5.12.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java-util</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients -->
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>3.4.0</version>
    </dependency>

  </dependencies>

  <build>
    <testResources>
      <testResource>
        <filtering>false</filtering>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <filtering>true</filtering>
        <directory>src/test/resources-filtered</directory>
      </testResource>
    </testResources>

    <plugins>

      <!--                -->
      <!-- TEST EXECUTION -->
      <!--                -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!--suppress MavenModelInspection -->
          <skipITs>${skipITs}</skipITs>
          <reuseForks>true</reuseForks>
          <useSystemClassLoader>false</useSystemClassLoader>
          <trimStackTrace>false</trimStackTrace>
          <systemPropertyVariables>
            <application.docker.image>${application.docker.image}</application.docker.image>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>lokahi-integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
              <excludes>
                <exclude>none</exclude>
              </excludes>
              <includes>
                <include>**/*IT.java</include>
              </includes>
            </configuration>
          </execution>

          <!-- Fail the build on IT Failures.  Executed as a separate step so that post-integration-test -->
          <!--  phase executes even after an IT failure.                                                 -->
          <execution>
            <id>lokahi-verify-it</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
