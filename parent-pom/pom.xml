<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <name>OpenNMS Lokahi :: Lokahi Parent</name>
    <description>
        Parent POM with standard dependency versions for use across multiple top-level projects.
    </description>

    <groupId>org.opennms.lokahi</groupId>
    <artifactId>lokahi-parent</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <!-- Configuration properties -->
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <skipITs>false</skipITs>

        <!-- DT = Developer (Manual) Test; do not automatically execute during builds -->
        <skipDTs>true</skipDTs>

        <!-- Jib properties -->
        <application.jib.defaultGoal>dockerBuild</application.jib.defaultGoal> <!-- dockerBuild for local only; build to push also -->
        <!-- agents will be extracted relative to this build location -->
        <application.jib.extra.root>${project.build.directory}/jib</application.jib.extra.root>
        <application.jib.app.config>/app/config</application.jib.app.config>
        <application.docker.skip>false</application.docker.skip>
        <application.docker.image>${application.docker.image.name}:${application.docker.image.tag}</application.docker.image>
        <!-- application.docker.image.name MUST be set by child modules that use jib-maven-plugin. -->
        <application.docker.image.name>INVALID</application.docker.image.name>
        <application.docker.image.tag>latest</application.docker.image.tag>

        <!-- Sonar properties -->
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.organization>opennms</sonar.organization>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
        <!-- sonar.projectKey MUST be set by child modules that use sonar-maven-plugin. -->
        <sonar.projectKey/>

        <!-- Dependency properties -->
        <activemq.version>5.17.1</activemq.version>
        <auth0.jwt.version>4.3.0</auth0.jwt.version>
        <aries.jax.rs.whiteboard.version>2.0.2</aries.jax.rs.whiteboard.version>
        <aries.jpa.api.version>2.7.3</aries.jpa.api.version>
        <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>
        <bsf.version>2.4.0</bsf.version>
        <eclipselink.version>4.0.0</eclipselink.version>
        <camel.version>3.20.0</camel.version>
        <commons.io.version>2.11.0</commons.io.version>
        <commons.lang.version>2.6</commons.lang.version>
        <commons.net.version>3.9.0</commons.net.version>
        <cucumber.version>7.1.0</cucumber.version>
        <cxf.version>3.5.5</cxf.version>
        <dhcp4java.version>1.1.0</dhcp4java.version>
        <dropwizard.metrics.version>4.2.10</dropwizard.metrics.version>
        <geohash.version>1.4.0</geohash.version>
        <glassfish.jaxb.version>2.3.2</glassfish.jaxb.version>
        <grpc.version>1.54.1</grpc.version>
        <gson.version>2.8.9</gson.version>
        <guava.version>31.0.1-jre</guava.version>
        <hamcrest.version>1.3</hamcrest.version>
        <hibernate.version>6.1.6.Final</hibernate.version>
        <hibernate-validator.version>8.0.0.Final</hibernate-validator.version>
        <httpcore.version>4.4.4</httpcore.version>
        <httpclient.version>4.5.13</httpclient.version>
        <ignite.version>2.14.0</ignite.version>
        <jackson.version>2.14.1</jackson.version>
        <jacoco.version>0.8.8</jacoco.version>
        <jaeger.version>0.34.0</jaeger.version>
        <jakarta.annotation.version>2.1.1</jakarta.annotation.version>
        <jakarta.activation.version>2.1.1</jakarta.activation.version>
        <jakarta.validation.version>3.0.2</jakarta.validation.version>
        <jakarta.xml.version>4.0.0</jakarta.xml.version>
        <jakarta.mail.version>1.6.7</jakarta.mail.version>
        <jakarta.servlet.version>6.0.0</jakarta.servlet.version>
        <javax.annotation.version>1.2</javax.annotation.version>
        <jaxrs.version>2.1</jaxrs.version>
        <jboss-logging.version>3.4.1.Final</jboss-logging.version>
        <jcifs.version>2.1.6</jcifs.version>
        <jexl.version>2.1.1</jexl.version>
        <jicmp.version>3.0.0</jicmp.version>
        <jicmp6.version>2.0.1</jicmp6.version>
        <jna.version>5.14.0</jna.version>
        <joda.time.version>2.1</joda.time.version>
        <junit.version>4.13.2</junit.version>
        <jsonPatch.version>1.13</jsonPatch.version>
        <jacksonCoreUtils.version>2.0</jacksonCoreUtils.version>
        <fgeMsgSimple.version>1.2</fgeMsgSimple.version>
        <fgeBtf.version>1.3</fgeBtf.version>
        <jsr250.version>1.0</jsr250.version>
        <jsr305.version>3.0.2</jsr305.version>
        <karaf.version>4.4.2</karaf.version>
        <karaf.maven-plugin.version>${karaf.version}</karaf.maven-plugin.version> <!-- use separate property in case a need to separate from the base Karaf version arises -->
        <keycloak.version>20.0.3</keycloak.version>
        <liquibaseVersion>4.17.0</liquibaseVersion>
        <log4j2.version>2.19.0</log4j2.version>
        <logback.contrib.version>0.1.5</logback.contrib.version>
        <logcaptor.version>2.7.10</logcaptor.version>
        <mapstruct.version>1.5.3.Final</mapstruct.version>
        <maven-dependency.version>3.3.0</maven-dependency.version>
        <maven-resources.version>3.3.0</maven-resources.version>
        <mina.version>2.1.5</mina.version>
        <netty3.version>3.10.6.Final</netty3.version>
        <netty4.version>4.1.78.Final</netty4.version>
        <opennms.tracker.version>0.7</opennms.tracker.version>
        <opentracing.version>0.31.0</opentracing.version>
        <opentelemetry.version>1.32.0</opentelemetry.version>
        <opentelemetry-semconv.version>1.23.1-alpha</opentelemetry-semconv.version>
        <org.osgi.service.jdbc.version>1.0.0</org.osgi.service.jdbc.version>
        <osgi.version>7.0.0</osgi.version>
        <micrometer.version>1.11.1</micrometer.version>
        <pax.jdbc.version>1.5.2</pax.jdbc.version>
        <postgresql.version>42.5.1</postgresql.version>
        <testcontainers.version>1.18.3</testcontainers.version>
        <prometheus.version>0.16.0</prometheus.version>
        <protobuf.version>3.19.6</protobuf.version>   <!-- WARNING: this also controls the version of the protobuf compiler, change at your risk!-->
        <rate.limitted.logger.version>2.0.2</rate.limitted.logger.version>
        <rest-assured.version>5.3.0</rest-assured.version>
        <slf4j.version>2.0.12</slf4j.version>
        <slf4j.karaf.version>1.7.36</slf4j.karaf.version>
        <snmp4j.version>2.5.5</snmp4j.version>
        <snmp4j.agent.version>2.5.3</snmp4j.agent.version>
        <spring.version>6.0.4</spring.version>
        <servicemix.spring.version>5.3.14_1</servicemix.spring.version>
        <spring-boot.version>3.0.1</spring-boot.version>
        <spring-security.version>6.0.1</spring-security.version>
        <spring-kafka.version>3.0.1</spring-kafka.version>
        <sonar-maven.version>3.9.1.2184</sonar-maven.version>
        <swagger.version>2.1.1</swagger.version>
        <lombok.version>1.18.30</lombok.version>
        <lombok.binding.version>0.2.0</lombok.binding.version>
        <zjsonpatch.version>0.4.12</zjsonpatch.version>
        <mockito.version>4.8.0</mockito.version>
        <jupiter.version>5.9.0</jupiter.version>
        <jib.version>3.3.1</jib.version>
        <surefire.version>3.1.0</surefire.version>
        <failsafe.version>3.1.0</failsafe.version>
        <zjsonpatch.version>0.4.12</zjsonpatch.version>
        <jetty.version>11.0.20</jetty.version>
        <cron-utils.version>9.1.6</cron-utils.version>
        <eos.version>1.2.0</eos.version>
        <okhttp.version>3.14.0</okhttp.version>
        <resilience4j.version>1.7.0</resilience4j.version>
        <snappy-java.version>1.1.8.4</snappy-java.version>
        <wiremock.version>2.27.2</wiremock.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
        <os-maven-plugin.version>1.6.2</os-maven-plugin.version>
        <flows.gateway.grpc.version>1.12.8</flows.gateway.grpc.version>
        <jayway-awaitility.version>1.7.0</jayway-awaitility.version>
        <awaitility.version>4.2.0</awaitility.version>
        <commons-csv.version>1.9.0</commons-csv.version>
        <jmh.version>1.33</jmh.version>
        <zip4j.version>2.11.5</zip4j.version>
        <velocity.engine.version>2.3</velocity.engine.version>
        <azure-communication-email.version>1.0.0</azure-communication-email.version>
        <io.hypersistence.verion>3.3.2</io.hypersistence.verion>
        <org.jsoup.version>1.15.3</org.jsoup.version>
        <rocksdb.version>8.0.0</rocksdb.version>
        <spotless.version>2.43.0</spotless.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>ch.hsr</groupId>
                <artifactId>geohash</artifactId>
                <version>${geohash.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.java-json-tools</groupId>
                <artifactId>json-patch</artifactId>
                <version>${jsonPatch.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.java-json-tools</groupId>
                <artifactId>jackson-coreutils</artifactId>
                <version>${jacksonCoreUtils.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.java-json-tools</groupId>
                <artifactId>msg-simple</artifactId>
                <version>${fgeMsgSimple.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.java-json-tools</groupId>
                <artifactId>btf</artifactId>
                <version>${fgeBtf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${jsr305.version}</version>
            </dependency>
            <dependency>
                <groupId>com.helger</groupId>
                <artifactId>dhcp4java</artifactId>
                <version>${dhcp4java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${jayway-awaitility.version}</version>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.swrve</groupId>
                <artifactId>rate-limited-logger</artifactId>
                <version>${rate.limitted.logger.version}</version>
            </dependency>
            <dependency>
                <groupId>bsf</groupId>
                <artifactId>bsf</artifactId>
                <version>${bsf.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>eu.agno3.jcifs</groupId>
                <artifactId>jcifs-ng</artifactId>
                <version>${jcifs.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.github.hakky54</groupId>
                <artifactId>logcaptor</artifactId>
                <version>${logcaptor.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_pushgateway</artifactId>
                <version>${prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient</artifactId>
                <version>${prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>${jakarta.annotation.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>jsr250-api</artifactId>
                <version>${jsr250.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>${jaxrs.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.aries.jpa</groupId>
                <artifactId>org.apache.aries.jpa.api</artifactId>
                <version>${aries.jpa.api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-client</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${auth0.jwt.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-activemq</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-core</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-core-languages</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-cron</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-jaxb</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-kafka</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel.karaf</groupId>
                <artifactId>camel-core-osgi</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-quartz</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-test</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient-osgi</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore-osgi</artifactId>
                <version>${httpcore.version}</version>
            </dependency>
            <!-- Mina -->
            <dependency>
                <groupId>org.apache.mina</groupId>
                <artifactId>mina-core</artifactId>
                <version>${mina.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.servicemix.bundles</groupId>
                <artifactId>org.apache.servicemix.bundles.spring-beans</artifactId>
                <version>${servicemix.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.servicemix.bundles</groupId>
                <artifactId>org.apache.servicemix.bundles.spring-context</artifactId>
                <version>${servicemix.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.servicemix.bundles</groupId>
                <artifactId>org.apache.servicemix.bundles.spring-context-support</artifactId>
                <version>${servicemix.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.servicemix.bundles</groupId>
                <artifactId>org.apache.servicemix.bundles.spring-core</artifactId>
                <version>${servicemix.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${dropwizard.metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-api</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-core</artifactId>
                <version>${grpc.version}</version>
                <optional>true</optional> <!-- EXCLUDE by default; use org.opennms.lokahi.shared / lokahi-shaded-grpc-core instead -->
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty-shaded</artifactId>
                <version>${grpc.version}</version>
                <!-- Use org.opennms.lokahi.shared / lokahi-shaded-grpc-core instead-->
                <exclusions>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-okhttp</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-services</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jaegertracing</groupId>
                <artifactId>jaeger-client</artifactId>
                <version>${jaeger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jaegertracing</groupId>
                <artifactId>jaeger-core</artifactId>
                <version>${jaeger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jaegertracing</groupId>
                <artifactId>jaeger-thrift</artifactId>
                <version>${jaeger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty</artifactId>
                <version>${netty3.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-buffer</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-common</artifactId>
                <version>${netty4.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>jakarta.mail</artifactId>
                <version>${jakarta.mail.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons.lang.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-api</artifactId>
                <version>${opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-util</artifactId>
                <version>${opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jakarta.xml.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.activation</groupId>
                <artifactId>jakarta.activation-api</artifactId>
                <version>${jakarta.activation.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.validation</groupId>
                <artifactId>jakarta.validation-api</artifactId>
                <version>${jakarta.validation.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.time.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna</artifactId>
                <version>${jna.version}</version>
            </dependency>
            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna-platform</artifactId>
                <version>${jna.version}</version>
            </dependency>
            <dependency>
                <groupId>net.lingala.zip4j</groupId>
                <artifactId>zip4j</artifactId>
                <version>${zip4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.aries.jax.rs</groupId>
                <artifactId>org.apache.aries.jax.rs.features</artifactId>
                <classifier>features</classifier>
                <version>${aries.jax.rs.whiteboard.version}</version>
                <type>xml</type>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-jexl</artifactId>
                <version>${jexl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-core</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-service-description-openapi-v3</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-security-oauth2</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ignite</groupId>
                <artifactId>ignite-core</artifactId>
                <version>${ignite.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ignite</groupId>
                <artifactId>ignite-kubernetes</artifactId>
                <version>${ignite.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ignite</groupId>
                <artifactId>ignite-spring</artifactId>
                <version>${ignite.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.ignite</groupId>
                        <artifactId>ignite-indexing</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.jaas</groupId>
                <artifactId>org.apache.karaf.jaas.modules</artifactId>
                <version>${karaf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.jaas</groupId>
                <artifactId>org.apache.karaf.jaas.config</artifactId>
                <version>${karaf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.jaas</groupId>
                <artifactId>org.apache.karaf.jaas.boot</artifactId>
                <version>${karaf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.features</groupId>
                <artifactId>framework</artifactId>
                <version>${karaf.version}</version>
                <type>kar</type>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.features</groupId>
                <artifactId>enterprise</artifactId>
                <classifier>features</classifier>
                <version>${karaf.version}</version>
                <type>xml</type>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.features</groupId>
                <artifactId>framework</artifactId>
                <classifier>features</classifier>
                <version>${karaf.version}</version>
                <type>xml</type>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.shell</groupId>
                <artifactId>org.apache.karaf.shell.core</artifactId>
                <version>${karaf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.features</groupId>
                <artifactId>standard</artifactId>
                <version>${karaf.version}</version>
                <classifier>features</classifier>
                <type>xml</type>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.features</groupId>
                <artifactId>static</artifactId>
                <version>${karaf.version}</version>
                <type>kar</type>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.services</groupId>
                <artifactId>org.apache.karaf.services.staticcm</artifactId>
                <version>${karaf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-admin-client</artifactId>
                <version>${keycloak.version}</version>
            </dependency>
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-core</artifactId>
                <version>${keycloak.version}</version>
            </dependency>
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-adapter-core</artifactId>
                <version>${keycloak.version}</version>
            </dependency>
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-servlet-filter-adapter</artifactId>
                <version>${keycloak.version}</version>
            </dependency>
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-jaxrs-oauth-client</artifactId>
                <version>${keycloak.version}</version>
            </dependency>
            <!-- JBOSS Logging required by Keycloak model objects -->
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging</artifactId>
                <version>${jboss-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.moxy</artifactId>
                <version>${eclipselink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>${glassfish.jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope> <!-- TODO: do not specify scope in dependencyManagement in case a project wants to use a different scope -->
            </dependency>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-core</artifactId>
                <version>${cucumber.version}</version>
            </dependency>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-java</artifactId>
                <version>${cucumber.version}</version>
            </dependency>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-junit-platform-engine</artifactId>
                <version>${cucumber.version}</version>
            </dependency>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-junit</artifactId>
                <version>${cucumber.version}</version>
            </dependency>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-picocontainer</artifactId>
                <version>${cucumber.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.orm</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>asm</groupId>
                        <artifactId>asm</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>asm-attrs</groupId>
                        <artifactId>asm-attrs</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>cglib</groupId>
                        <artifactId>cglib</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibaseVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.ops4j.pax.jdbc</groupId>
                <artifactId>pax-jdbc-pool-common</artifactId>
                <version>${pax.jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.service.jdbc</artifactId>
                <version>${org.osgi.service.jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope> <!-- TODO: do not specify scope in dependencyManagement in case a project wants to use a different scope -->
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.opennms</groupId>
                <artifactId>jicmp-api</artifactId>
                <version>${jicmp.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opennms</groupId>
                <artifactId>jicmp6-api</artifactId>
                <version>${jicmp6.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opennms.lib</groupId>
                <artifactId>org.opennms.lib.tracker</artifactId>
                <version>${opennms.tracker.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>osgi.cmpn</artifactId>
                <version>${osgi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>osgi.core</artifactId>
                <version>${osgi.version}</version>
                <scope>provided</scope> <!-- TODO: do not specify scope in dependencyManagement in case a project wants to use a different scope -->
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.snmp4j</groupId>
                <artifactId>snmp4j</artifactId>
                <version>${snmp4j.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.snmp4j</groupId>
                <artifactId>snmp4j-agent</artifactId>
                <version>${snmp4j.agent.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.rest-assured</groupId>
                <artifactId>rest-assured</artifactId>
                <version>${rest-assured.version}</version>
            </dependency>
            <!-- TODO: use slf4j18-impl -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j18-impl</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>kafka</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback.contrib</groupId>
                <artifactId>logback-json-classic</artifactId>
                <version>${logback.contrib.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback.contrib</groupId>
                <artifactId>logback-jackson</artifactId>
                <version>${logback.contrib.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-api</artifactId>
                <version>${opentelemetry.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry.instrumentation</groupId>
                <artifactId>opentelemetry-instrumentation-annotations</artifactId>
                <version>${opentelemetry.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-semconv</artifactId>
                <version>${opentelemetry-semconv.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.version}</version>
                <configuration>
                    <java>
                        <cleanthat>
                            <version>2.8</version>
                        </cleanthat>
                        <palantirJavaFormat>
                            <version>2.10.0</version>
                        </palantirJavaFormat>
                        <licenseHeader>
                            <file>${maven.multiModuleProjectDirectory}/spotless/header-java.txt</file>
                        </licenseHeader>
                    </java>
                    <pom>
                        <includes>
                            <include>pom.xml</include>
                        </includes>
                        <sortPom />
                        <licenseHeader>
                            <file>${maven.multiModuleProjectDirectory}/spotless/header-xml.txt</file>
                            <delimiter><![CDATA[<project]]></delimiter>
                        </licenseHeader>
                    </pom>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <configuration>
                        <layout>ZIP</layout>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>5.1.4</version>
                    <extensions>true</extensions>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources.version}</version>
                </plugin>

                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib.version}</version>
                    <configuration>
                        <from>
                            <!-- Make sure to use the hash of the manifest list (multi-arch) vs the hash of a particular manifest (single-arch) when updating
                                 See https://github.com/docker/roadmap/issues/262#issuecomment-1161515179 for an example on how to do this -->
                            <image>eclipse-temurin:17-jre@sha256:c61c6a48364d05ea89504489aecddd8af8c32dba6df2257da4131fe244284f50</image>
                        </from>
                        <!--suppress MavenModelInspection -->
                        <skip>${application.docker.skip}</skip>
                        <to>
                            <image>${application.docker.image}</image>
                        </to>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.karaf.tooling</groupId>
                    <artifactId>karaf-maven-plugin</artifactId>
                    <version>${karaf.maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${failsafe.version}</version>
                    <executions>
                        <execution>
                            <id>lokahi-integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                            <phase>integration-test</phase>
                            <configuration>
                                <skipITs>${skipITs}</skipITs>
                                <excludes>
                                    <exclude>none</exclude>
                                </excludes>
                                <includes>
                                    <include>**/*IT.java</include>
                                </includes>
                            </configuration>
                        </execution>

                        <execution>
                            <id>lokahi-developer-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                            <phase>integration-test</phase>
                            <configuration>
                                <skipITs>${skipDTs}</skipITs>
                                <excludes>
                                    <exclude>**/*IT.java</exclude>
                                </excludes>
                                <includes>
                                    <include>**/*DT.java</include>
                                </includes>
                                <argLine>--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
                                    --add-opens=java.base/jdk.internal.misc=ALL-UNNAMED
                                    --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
                                    --add-opens=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED
                                    --add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED
                                    --add-opens=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED
                                    --add-opens=java.base/java.io=ALL-UNNAMED
                                    --add-opens=java.base/java.nio=ALL-UNNAMED
                                    --add-opens=java.base/java.util=ALL-UNNAMED
                                    --add-opens=java.base/java.lang=ALL-UNNAMED
                                    --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
                                </argLine>
                            </configuration>
                        </execution>

                        <!-- Fail the build on IT Failures.  Executed as a separate step so that post-integration-test -->
                        <!--  phase executes even after an IT failure.                                                 -->
                        <execution>
                            <id>lokahi-verify-it</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>coverage</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <formats>
                                        <format>XML</format>
                                    </formats>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- rapid-build PROFILE to speed up local development at the cost of reduced testing/validations -->
        <profile>
            <id>rapid-build</id>
            <activation>
                <file>
                    <exists>${user.home}/.OPENNMS-RAPID-BUILD</exists>
                </file>
            </activation>
            <properties>
                <skipITs>true</skipITs>
                <skipTests>true</skipTests>
                <features.verify.skip>true</features.verify.skip> <!-- built-in property of karaf-maven-plugin -->
            </properties>
        </profile>

        <profile>
            <id>cicd</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <!-- Build AND push the built image -->
                <application.jib.defaultGoal>build</application.jib.defaultGoal>
                <jib.container.creationTime>USE_CURRENT_TIMESTAMP</jib.container.creationTime>
            </properties>
        </profile>

        <profile>
            <id>arch-amd64</id>
            <activation>
                <os>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <properties>
                <jib.from.platforms>linux/amd64</jib.from.platforms>
            </properties>
        </profile>

        <profile>
            <id>arch-arm64</id>
            <activation>
                <os>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <jib.from.platforms>linux/arm64</jib.from.platforms>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <snapshots><enabled>false</enabled></snapshots>
            <releases><enabled>true</enabled></releases>
            <id>opennms-repo</id>
            <name>OpenNMS Maven Repository</name>
            <url>https://maven.opennms.org/content/groups/opennms.org-release</url>
        </repository>
        <repository>
            <snapshots><enabled>true</enabled></snapshots>
            <releases><enabled>false</enabled></releases>
            <id>opennms-snapshots</id>
            <name>OpenNMS Snapshot Maven Repository</name>
            <url>https://maven.opennms.org/content/groups/opennms.org-snapshot</url>
        </repository>
        <repository>
            <id>opennms-maven-3rdparty</id>
            <url>https://packages.opennms.com/public/3rdparty/maven/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>
