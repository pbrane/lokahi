<?xml version="1.0" encoding="utf-8" ?>
<!--
 - Licensed to The OpenNMS Group, Inc (TOG) under one or more
 - contributor license agreements.  See the LICENSE.md file
 - distributed with this work for additional information
 - regarding copyright ownership.
 -
 - TOG licenses this file to You under the GNU Affero General
 - Public License Version 3 (the "License") or (at your option)
 - any later version.  You may not use this file except in
 - compliance with the License.  You may obtain a copy of the
 - License at:
 -
 -      https://www.gnu.org/licenses/agpl-3.0.txt
 -
 - Unless required by applicable law or agreed to in writing,
 - software distributed under the License is distributed on an
 - "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 - either express or implied.  See the License for the specific
 - language governing permissions and limitations under the
 - License.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.opennms.lokahi</groupId>
    <artifactId>lokahi-parent</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <relativePath>../parent-pom</relativePath>
  </parent>

  <artifactId>metrics-processor</artifactId>
  <version>0.1.0-SNAPSHOT</version>

  <packaging>pom</packaging>

  <name>OpenNMS Lokahi :: Metrics Processor</name>
  <description>A microservice responsible for processing device metrics.</description>
  <modules>
    <module>main</module>
    <module>flows</module>
    <module>timeseries</module>
  </modules>

  <properties>
    <application.docker.image.name>opennms/lokahi-metrics-processor</application.docker.image.name>
    <java.version>17</java.version>
    <sonar.projectKey>opennms_lokahi_metrics-processor</sonar.projectKey>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.opennms.lokahi.shared</groupId>
      <artifactId>spring-boot-logback-json</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${lombok.binding.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>${os-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>detect</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!--suppress MavenModelInspection -->
          <skipITs>${skipITs}</skipITs>
          <reuseForks>true</reuseForks>
          <useSystemClassLoader>false</useSystemClassLoader>
          <trimStackTrace>false</trimStackTrace>
          <systemPropertyVariables>
            <application.docker.image>${application.docker.image}</application.docker.image>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>lokahi-integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
              <excludes>
                <exclude>none</exclude>
              </excludes>
              <includes>
                <include>**/*IT.java</include>
              </includes>
            </configuration>
          </execution>

          <!-- Fail the build on IT Failures.  Executed as a separate step so that post-integration-test -->
          <!--  phase executes even after an IT failure.                                                 -->
          <execution>
            <id>lokahi-verify-it</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
