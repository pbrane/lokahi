/*******************************************************************************
 * This file is part of OpenNMS(R).
 *
 * Copyright (C) 2022 The OpenNMS Group, Inc.
 * OpenNMS(R) is Copyright (C) 1999-2022 The OpenNMS Group, Inc.
 *
 * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.
 *
 * OpenNMS(R) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * OpenNMS(R) is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with OpenNMS(R).  If not, see:ufl
 *      http://www.gnu.org/licenses/
 *
 * For more information contact:
 *     OpenNMS(R) Licensing <license@opennms.org>
 *     http://www.opennms.org/
 *     http://www.opennms.com/
 *******************************************************************************/
syntax = "proto3";

import "google/protobuf/any.proto";
import "snmp-api.proto";

package opennms.snmp;
option java_multiple_files = true;
option java_package = "org.opennms.snmp.contract";

message SnmpDetectorRequest {
  string host = 1;
  opennms.snmp.api.SnmpConfiguration agent_config = 4;
}

message SnmpMonitorRequest {
  string host = 1;
  string oid = 2;
  string operator = 3;
  string operand = 4;
  opennms.snmp.api.SnmpConfiguration agent_config = 5;
}

message SnmpCollectorRequest {
  string  host = 1;
  opennms.snmp.api.SnmpConfiguration agent_config = 2;
  uint64  node_id = 3;
  uint32 if_index = 4; // deprecated
  repeated SnmpInterfaceElement snmp_interface = 5;
  repeated SnmpCollectorPart part = 6;
}

message SnmpInterfaceElement {
  string if_name = 1;
  uint32 if_index = 2;
  optional string ip_address = 3;
}

message SnmpCollectorPart {
  message Element {
    string oid = 1;
    string alias = 2;
    string type = 3;
  }

  message Scalar {
    repeated Element element = 1;
  }

  message Table {
    string instance = 1;

    repeated Element element = 2;

    optional string persist_filter_expr = 3;
  }

  oneof part {
    Scalar scalar = 1;
    Table table = 2;
  }
}
